#!/bin/bash
#Run as:  ./deploy < config file > < option > < option parameter >
#Eg: ./bin/deploy ./configs/config.ini install

#	options: install, rebuild, clean, start
#	rebuild takes a parameter specifying which package should be rebuild: mesos or oodt curently supported

#Check correct calling
if	[[ ! -a "$1" ]]; then
	echo "Config file specified does not exist"
	echo "usage:  < config file > < install/rebuild/cleam > < optional rebuild package name >"
	exit
elif [[ -z "$2" ]]; then
	echo "Invalid option, please select on of: install/rebuild/clean"
	echo "usage:  < config file > < install/rebuild/cleam > < optional rebuild package name >"
	exit
elif [[ $3 && "$3" != "mesos" && "$3" != "oodt" ]]; then
	echo "Unknown package selected for rebuild, available packages are: mesos, oodt"
	echo "This is $3: ", $3
	echo "usage:  < config file > < install/rebuild/cleam > < optional rebuild package name >"
else
	echo "Executing with: ", $1, $2, $3
fi

#Check >=python 2.5 with pip is installed else exit
if hash python 2>/dev/null; then
	echo "Found python installed" 
	if hash pip 2>/dev/null; then
		echo "Found python pip installed"
	else
		echo "No python pip installation found, please install and then rerun this script"
		exit
	fi
else
	echo "No python installation found, please install python2.5 or greater and then rerun this script"
	exit
fi

#Check PATH includes ~/.local for locally installed python modules
if [[ ":$PATH:" == *"$HOME/.local/:"* ]]; then
	export PATH=$HOME/.local/lib:$PATH
fi

if [[ $2 == "install" ]]; then
		python ../fabricsoodt/main.py $1
		exit

elif [[ $2 == "rebuild" ]]; then
		python ../fabricsoodt/main.py $1 $3

elif [[ $2 == "uninstall" ]]; then
	echo "STILL  TO WRITE LOGGING and CLEANUP script"

else
	echo "Bad options"
fi

#python ../fabricsoodt/main.py $1	--Later add that the config file must be specified and have a help message output if the config file is not given
